<html>
<head>
<script src="/socket.io/socket.io.js"></script>
</head>
<body>
<label>Msg:</label>
<input id="message" type="text">
<input onclick="sendBroadcastMessage()" type="submit">
{% set username = hompt() %} {# pass the username to the template #}
<p>Username: {{ username }}</p> {# indicate the username in the template #}
<script>
const socket = io.connect();



function sendBroadcastMessage() {
  let message = document.getElementById("message").value;
  let username = '{{ username }}'; 
  socket.emit("broadcast", { message, username });
}

socket.on("msg", (data) => {
  console.log("message", data);
  let p = document.createElement("p");
  p.innerText = data;
  document.body.append(p);
});

socket.on("broadcast", (data) => {
  console.log("broadcast", data);
  let p = document.createElement("p");
  p.innerText = `[${data.username}]: ${data.message}`;
  document.body.append(p);
});


const socket =io.connect();

socket.on("msg",(data)=>{
    console.log("message",data);
    p=document.createElement("p")
    p.innerText=(data)
    document.body.append(p);
});



function send(){
    let message=document.getElementById("message");
    socket.emit("msg",message.value)

}

// assuming the socket object is already connected to the server
function sendBroadcastMessage(message) {
  socket.emit("broadcast", message);
}

// server-side implementation to handle the "broadcast" event
socket.on("broadcast", (message) => {
  // broadcast the message to all connected clients, including the sender
  io.emit("broadcast", message);
});

</script>
</body>
</html>